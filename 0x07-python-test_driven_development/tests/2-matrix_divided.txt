>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> 
>>> # define matrix
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> 
>>> # divide by 3
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> 
>>> # define by 1.5
>>> print(matrix_divided(matrix, 1.5))
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]
>>> 
>>> # not list of ints, divide by int
>>> print(matrix_divided([[4, 'hi', 8], ['hi', 'h', 'i']], 1))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/hydra/Desktop/coding/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 25, in matrix_divided
    raise TypeError('matrix must be a matrix (list of lists) of '
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> 
>>> # missing 1 arg
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> 
>>> # missing both args
>>> print(matrix_divided())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> 
>>> # divide by float(inf)
>>> print(matrix_divided([[9, 8, 7], [99, 88, 77]], float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> 
>>> # divide by "hey"
>>> print(matrix_divided(matrix, "Hey"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/hydra/Desktop/coding/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 14, in matrix_divided
    raise TypeError('div must be a number')
TypeError: div must be a number
>>> 
>>> # force error divide by 0
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/hydra/Desktop/coding/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 11, in matrix_divided
    raise ZeroDivisionError('division by zero')
ZeroDivisionError: division by zero
>>> 
>>> # redefine matrix
>>> matrix = [[1, 2, 3], [4, 6]]
>>> 
>>> # force error asymettrical matrix
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/hydra/Desktop/coding/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 22, in matrix_divided
    raise TypeError('Each row of the matrix must have the same size')
TypeError: Each row of the matrix must have the same size
